@using Microsoft.AspNetCore.Components.Authorization
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid d-flex flex-column justify-content-center align-items-center text-center" style="height: 100px;">
        <p class="fw-bold mb-1" style="color: white;">MAINS</p>
        <p class="fw-bold" style="color: red;">@NamaPekerja</p>
    </div>

</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="MainPage" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="LihatLaporan">
                <span class="bi bi-file-earmark-text-nav-menu" aria-hidden="true"></span> Laporan Kedatangan
            </NavLink>
        </div>
        


        @if (NamaPekerja == "Admin")
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="UploadRekod">
                    <span class="bi bi-cloud-upload-nav-menu" aria-hidden="true"></span> Muat NaikData
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="PengurusanId">
                    <span class="bi bi-bi-people-nav-menu" aria-hidden="true"></span> Pengurusan Id
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="LogOut">
                <span class="bi bi-x-circle-nav-menu" aria-hidden="true"></span> Log Keluar
            </NavLink>
        </div>
    </nav>
</div>

@inject IIdentityAuthenticationLib myIden
@inject IConfiguration _conf
@inject NavigationManager NavMan

@code{
    public string Mode = string.Empty;
    public string NamaPekerja = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        Mode = _conf["Mode"]?.ToString() ?? string.Empty;
        var authState = await myIden.GetUserAsync();
        var user = authState.Identity as ClaimsIdentity;
        NamaPekerja = user?.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value ?? "";
        if (user == null || !user.IsAuthenticated)
        {
            await myIden.SignOutUserAsync();
            string baseUrl = (Mode == "Dev") ? "/SessiTamat" : "/rekodkedatangan/SessiTamat";
            NavMan.NavigateTo(NavMan.ToAbsoluteUri(baseUrl).ToString(), true);
        }
        StateHasChanged();
    }
}
