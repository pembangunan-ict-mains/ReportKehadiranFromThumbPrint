@page "/TukarPassword"


@layout EmptyLayout
@inject IConfiguration _conf
@inject IServices _services
@rendermode InteractiveServer
@* @rendermode @(new InteractiveServerRenderMode(prerender: false)) *@
@attribute [Authorize]
@inject IIdentityAuthenticationLib myIden
@inject NavigationManager NavMan
@inject IJSRuntime JSRuntime
@inject SweetAlertService Swal


@if (isLoading)
{
    <div class="loading-overlay">
        <LoadingProgress />
    </div>
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 text-center">
            <h4 class="mb-4">Pengurusan Id Pengguna - Tukar Kata Laluan</h4>
        </div>

        <div class="d-flex justify-content-center align-items-center">
            <div class="card shadow-lg" style="width: 70%;">
                <div class="card-body">
                    <div class="mx-auto" style="max-width: 400px;">
                        <div class="mb-3">
                            <label class="form-label">Katalaluan Semasa</label>
                            <input @ref="Pass1" class="form-control" type="password" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Katalaluan Baru</label>
                            <input class="form-control" type="password" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Katalaluan Baru (Pengesahan)</label>
                            <input class="form-control" type="password" />
                        </div>
                        <div class="text-center">
                            <button class="btn btn-success"><i class="bi bi-floppy2-fill pe-2 py-2"></i>Kemaskini Katalaluan</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>

@code {
    public bool isLoading = false;
    public string Mode = string.Empty;
    public bool adaRekod = false; public bool adaChart = false;
    public string NamaPekerja = string.Empty;
    public string NAMA = string.Empty;
    public string NoStaf = string.Empty;
    public ElementReference Pass1;

    protected override async Task OnInitializedAsync()
    {
        Mode = _conf["Mode"]?.ToString() ?? string.Empty;
        var authState = await myIden.GetUserAsync();
        var user = authState.Identity as ClaimsIdentity;
        NamaPekerja = user?.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value ?? "";
        NoStaf = user?.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value ?? "";

        if (user == null || !user.IsAuthenticated)
        {
            await myIden.SignOutUserAsync();
            string baseUrl = (Mode == "Dev") ? "/SessiTamat" : "/rekodkedatangan/SessiTamat";
            NavMan.NavigateTo(NavMan.ToAbsoluteUri(baseUrl).ToString(), true);
        }

       
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadFile();
            await Pass1.FocusAsync();
            StateHasChanged();
        }
    }

    private async Task LoadFile()
    {
        await JSRuntime.InvokeVoidAsync("loadSweetAlert");
    }
}
