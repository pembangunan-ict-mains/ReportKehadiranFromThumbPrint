@page "/MainPage"


@layout MainLayout
@inject IConfiguration _conf
@inject IServices _services
@rendermode InteractiveServer
@* @rendermode @(new InteractiveServerRenderMode(prerender: false)) *@
@attribute [Authorize]
@inject IIdentityAuthenticationLib myIden
@inject NavigationManager NavMan
@inject IJSRuntime JSRuntime

@if (isLoading)
{
    <div class="loading-overlay">
        <LoadingProgress />
    </div>
}


<div class="container">
    <div class="row">
        <h3 class="fw-bold">Jumlah Rekod Thumbprint Mengikut Bulan Bagi Tahun <span style="color:red;">@DateTime.Now.Year</span></h3>
         @*  @if (adaRekod)
            {           
                <div class="table-responsive-lg mt-5">
                    <table class="table table-bordered table-hover table-striped align-middle text-center shadow-sm rounded-3">
                        <thead class="table-success">
                            <tr class="fw-bold">
                                <th style="width:10%">Bulan</th>
                                <th style="width:25%">Nama Bulan</th>
                                <th style="width:25%">Jumlah Rekod</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var x in data)
                            {
                                <tr>
                                    <td>@x.Month</td>
                                    <td class="text-start">@x.MonthName</td>
                                    <td>@x.AttendanceCount.ToString("N0")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="card-body mt-5">
                    <h5>Jumlah Keseluruhan Rekod Kedatangan Mengikut Bulan Bagi Tahun <span class="fw-bold" style="color:red;">@DateTime.Now.Year</span> </h5>
                    <div class="chart-container">                  
                        <canvas id="Chart1"></canvas>
                    </div>
                </div>
            }
     *@
    </div>
    <div class="row mt-1">
        <div class="container mt-1">
            @if (adaRekod)
            {
                <div class="row g-4">
                    @foreach (var x in data)
                    {
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="card shadow-sm border-0 rounded-4 h-100 hover-shadow">
                                <div class="card-body p-4">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <span class="badge bg-success bg-gradient px-3 py-2 fs-6">
                                            Bulan @x.Month
                                        </span>
                                        <i class="bi bi-calendar-week text-success fs-4"></i>
                                    </div>

                                    <h5 class="card-title fw-bold text-dark mb-1">
                                        @x.MonthName
                                    </h5>

                                    <p class="card-text text-muted mb-3">
                                        Rekod Kehadiran
                                    </p>

                                    <div class="display-6 fw-bold text-success">
                                        @x.AttendanceCount.ToString("N0")
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>

                <div class="card-body mt-5">
                    <h5>Jumlah Keseluruhan Rekod Kedatangan Mengikut Bulan Bagi Tahun <span class="fw-bold" style="color:red;">@DateTime.Now.Year</span> </h5>
                    <div class="chart-container">
                        <canvas id="Chart1"></canvas>
                    </div>
                </div>

            }           
        </div>

    </div>
</div>

@code {
    public string Mode = string.Empty;
    public bool adaRekod = false;public bool adaChart = false;
    public string NOID = string.Empty;
    public string NAMA = string.Empty;
    private bool isLoading = false;

    IEnumerable<InfoDashboard> data = [];
    IEnumerable<InfoDashboard> dataChart = [];
    public int Jumlah;

    protected override async Task OnInitializedAsync()
    {
        Mode = _conf["Mode"]?.ToString() ?? string.Empty;
        var authState = await myIden.GetUserAsync();
        var user = authState.Identity as ClaimsIdentity;
        NOID = user?.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role)?.Value ?? "";
        if (user == null || !user.IsAuthenticated)
        {
            await myIden.SignOutUserAsync();
            string baseUrl = (Mode == "Dev") ? "/SessiTamat" : "/rekodkedatangan/SessiTamat";
            NavMan.NavigateTo(NavMan.ToAbsoluteUri(baseUrl).ToString(), true);
        }

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                isLoading = true;
                data = Enumerable.Empty<InfoDashboard>();
                data = await _services.GetInfoForDashboard() ?? Enumerable.Empty<InfoDashboard>();
                dataChart = await _services.GetReportForChart() ?? Enumerable.Empty<InfoDashboard>();
                adaRekod = data.Any();adaChart = dataChart.Any();
                
                if (dataChart.Any())
                {
                    await JSRuntime.InvokeVoidAsync("updateChart",
                     dataChart.Select(d => d.Month).ToArray(),
                     dataChart.Select(d => d.AttendanceCount).ToArray());
                }

            }
            catch (System.Exception er)
            {
                Console.WriteLine(er.Message);
                isLoading = false;
                throw;
            }
            finally
            {
                isLoading = false;
                StateHasChanged();
            }
        }
    }


    // private async Task GetInfo()
    // {
    //     try
    //     {
    //         isLoading = true;
    //         data = Enumerable.Empty<InfoDashboard>();
    //         data = await _services.GetInfoForDashboard() ?? Enumerable.Empty<InfoDashboard>();
    //         adaRekod = data.Any(); 
    //     }
    //     catch(System.Exception er)
    //     {
    //         isLoading = false;
    //         throw;
    //     }
    //     finally
    //     {
    //         isLoading = false;
    //         StateHasChanged(); 
    //     }

    // }

}
